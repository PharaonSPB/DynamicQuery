plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm' version '1.5.32'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
    id 'org.jetbrains.dokka' version '1.6.10'
    id 'io.gitlab.arturbosch.detekt' version '1.19.0'
}

group 'com.github.dsulimchuk.dynamicquery'
version '1.0.9-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    withJavadocJar()
    withSourcesJar()
}

detekt {
    config = files("$projectDir/detekt.yml")
}

signing {
    sign publishing.publications
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.5.32"
    implementation "io.github.microutils:kotlin-logging-jvm:2.0.13"
    implementation "jakarta.persistence:jakarta.persistence-api:2.2.3"
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testImplementation 'junit:junit:4.12'
    testImplementation "ch.qos.logback:logback-classic:1.2.3"
    testImplementation 'javax.xml.bind:jaxb-api:1.0'
    testImplementation 'org.hibernate:hibernate-core:5.4.33'
    testImplementation 'com.h2database:h2:1.4.199'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = 'dynamic-query'
            version = version
            from components.java

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = artifactId
                description = 'Dynamic Query DSL for JPA (Hibernate) on Kotlin'
                url = 'https://github.com/dsulimchuk/DynamicQuery'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'dsulimchuk'
                        name = 'Dmitrii Sulimchuk'
                        email = 'dserge.spb@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/dsulimchuk/DynamicQuery.git'
                    developerConnection = 'scm:git:ssh://git@github.com:dsulimchuk/DynamicQuery.git'
                    url = 'https://github.com/dsulimchuk/DynamicQuery'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"

            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = findProperty('ossrhUsername')
                password = findProperty('ossrhPassword')
            }
        }
    }
}

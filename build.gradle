group 'com.github.dsulimchuk.dynamicquery'
version '1.0.7'

buildscript {
    ext.kotlin_version = '1.3.60'
    ext.dokka_version = "1.4.32"
    ext.detekt_version = '1.0.0.RC6-4'

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath "gradle.plugin.io.gitlab.arturbosch.detekt:detekt-gradle-plugin:${detekt_version}"
    }
}

apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'io.gitlab.arturbosch.detekt'

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

detekt {
    version = detekt_version
    profile("main") {
        input = "$projectDir/src/main/kotlin"
        config = "$projectDir/detekt.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    }
}

signing {
    sign publishing.publications
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "io.github.microutils:kotlin-logging:1.6.26"
    implementation "jakarta.persistence:jakarta.persistence-api:2.2.3"
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testCompile 'junit:junit:4.12'
    testCompile "ch.qos.logback:logback-classic:1.1.7"
    testCompile 'javax.xml.bind:jaxb-api:1.0'
    testCompile 'org.hibernate:hibernate-core:5.2.18.Final'
    testCompile 'com.h2database:h2:1.4.199'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = 'dynamic-query'
            version = version
            from components.java

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = artifactId
                description = 'Dynamic Query DSL for JPA (Hibernate) on Kotlin'
                url = 'https://github.com/dsulimchuk/DynamicQuery'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'dsulimchuk'
                        name = 'Dmitrii Sulimchuk'
                        email = 'dserge.spb@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/dsulimchuk/DynamicQuery.git'
                    developerConnection = 'scm:git:ssh://git@github.com:dsulimchuk/DynamicQuery.git'
                    url = 'https://github.com/dsulimchuk/DynamicQuery'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"

            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = findProperty('ossrhUsername')
                password = findProperty('ossrhPassword')
            }
        }
    }
}
